# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-05 21:15
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Laboratory's name")),
                ('address', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_title', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WaterIntakeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_taken', models.DateTimeField(auto_now_add=True)),
                ('date_laboratory', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.IntegerField()),
                ('source_type', models.CharField(choices=[('underground', 'Underground'), ('surface', 'Surface')], max_length=50)),
                ('classification', models.IntegerField(choices=[(1, 'Перший клас'), (2, 'Другий клас'), (3, 'Третій клас'), (4, 'Непридатне')])),
                ('classification_reason_field', models.CharField(blank=True, max_length=50, null=True)),
                ('smell_20_celsium', models.IntegerField(blank=True, choices=[(0, '0 - не виявляються'), (1, '1 - виявляються дегустатором'), (2, '2 - виявляються споживачем'), (3, '3 - виявляються легко'), (4, '4 - сильний запах і присмак'), (5, '5 - непридатна для пиття')], null=True)),
                ('smell_60_celsium', models.IntegerField(blank=True, choices=[(0, '0 - не виявляються'), (1, '1 - виявляються дегустатором'), (2, '2 - виявляються споживачем'), (3, '3 - виявляються легко'), (4, '4 - сильний запах і присмак'), (5, '5 - непридатна для пиття')], null=True)),
                ('aftertaste', models.IntegerField(blank=True, choices=[(0, '0 - не виявляються'), (1, '1 - виявляються дегустатором'), (2, '2 - виявляються споживачем'), (3, '3 - виявляються легко'), (4, '4 - сильний запах і присмак'), (5, '5 - непридатна для пиття')], null=True)),
                ('color', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('dry_residue', models.IntegerField(blank=True, null=True)),
                ('pH', models.FloatField(blank=True, null=True)),
                ('rigidity', models.IntegerField(blank=True, null=True)),
                ('nitrates', models.IntegerField(blank=True, null=True)),
                ('chlorides', models.IntegerField(blank=True, null=True)),
                ('sulphates', models.IntegerField(blank=True, null=True)),
                ('iron_overall', models.FloatField(blank=True, null=True)),
                ('manganese', models.FloatField(blank=True, null=True)),
                ('fluorine', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterIntakePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_on_map', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='waterintakeinfo',
            name='intake_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watersamples.WaterIntakePoint'),
        ),
        migrations.AddField(
            model_name='waterintakeinfo',
            name='laboratory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watersamples.Laboratory'),
        ),
        migrations.AddField(
            model_name='waterintakeinfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
